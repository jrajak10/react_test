{"version":3,"sources":["underneath.jpg","folkesange.jpg","splid.jpg","dead_men.png","log.jpg","logo.svg","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","id","style","width","height","borderRadius","marginLeft","marginRight","marginBottom","Navbar","props","class","href","AlbumCover","src","album","alt","AlbumEmbed","SongsToListenTo","LIST_ITEMS","songs","map","song","AlbumDescription","albumTitle","description","App","DESCRIPTION","ALBUM_URL","SONGS","folkesange","underneath","splid","dead_men","log","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"8FAAAA,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,iC,uECA3CD,EAAOC,QAAU,IAA0B,kC,8LC4D3C,SAASC,IAUP,OACE,yBAAKC,GAAG,aAAaC,MAVF,CACnBC,MAAO,MACPC,OAAQ,GACRC,aAAc,EACdC,WAAY,MACZC,YAAa,MACbC,aAAc,KAKZ,wBAAIP,GAAG,UAAP,4BAKN,SAASQ,EAAOC,GACd,OACE,yBAAKC,MAAM,WACT,uBAAGC,KAAK,eAAR,QACA,uBAAGA,KAAK,MAAR,MACA,uBAAGA,KAAK,MAAR,MACA,uBAAGA,KAAK,MAAR,MACA,uBAAGA,KAAK,MAAR,MACA,uBAAGA,KAAK,MAAR,OAMN,SAASC,EAAWH,GAClB,OACE,yBAAKI,IAAKJ,EAAMK,MAAOC,IAAI,gBAI/B,SAASC,EAAWP,GAClB,OACE,4BAAQI,IAAKJ,EAAMI,MAIvB,SAASI,EAAgBR,GACvB,IACMS,EADQT,EAAMU,MACKC,KAAI,SAACC,GAAD,OAAU,wBAAIX,MAAM,SAASW,MAC1D,OACE,4BACGH,GAKP,SAASI,EAAiBb,GAExB,OACE,yBAAKC,MAAM,oBAAoBV,GAAIS,EAAMT,IACvC,kBAACY,EAAD,CAAYE,MAAOL,EAAMK,QACzB,4BAAKL,EAAMc,YACX,uBAAGb,MAAM,eAAeD,EAAMe,aAC9B,uBAAGd,MAAM,eAAT,uBACA,kBAACO,EAAD,CAAiBE,MAAOV,EAAMU,QAC9B,uBAAGnB,GAAG,WAAN,sCACA,kBAACgB,EAAD,CAAYH,IAAKJ,EAAMI,OAUdY,MA3Hf,WACE,IAAMC,EAAc,CAClB,cAAe,8QAIf,OAAU,+JAEV,UAAa,wSAIb,QAAW,2GAEX,cAAe,qJAIXC,EACW,8DADXA,EAEM,8DAFNA,EAGS,8DAHTA,EAIO,8DAJPA,EAKW,8DAGXC,EAAQ,CAAC,OAAU,CAAC,gBAAiB,mBAC7B,cAAe,CAAC,8BAA+B,UAAW,cAC1D,UAAa,CAAC,WAAY,gBAAiB,iBAC3C,QAAW,CAAC,wBAAyB,iBACrC,cAAe,CAAC,iBAE9B,OACE,6BACE,kBAACpB,EAAD,MACA,kBAACT,EAAD,MACA,kBAACuB,EAAD,CAAkBC,WAAW,wBAAyBT,MAAOe,IAAYL,YAAaE,EAAW,OAC/Fb,IAAKc,EAAqBR,MAAOS,EAAK,OAAY5B,GAAG,MACvD,kBAACsB,EAAD,CAAkBC,WAAW,6BAA6BT,MAAOgB,IAAYN,YAAaE,EAAY,eACpGb,IAAKc,EAA0BR,MAAOS,EAAM,eAAgB5B,GAAG,MACjE,kBAACsB,EAAD,CAAkBC,WAAW,sBAAsBT,MAAOiB,IAAOP,YAAaE,EAAW,UACvFb,IAAKc,EAAwBR,MAAOS,EAAK,UAAe5B,GAAG,MAC3D,kBAACsB,EAAD,CAAkBC,WAAW,oCAAoCT,MAAOkB,IAAUR,YAAaE,EAAW,QAC1Gb,IAAKc,EAAsBR,MAAOS,EAAK,QAAa5B,GAAG,MACvD,kBAACsB,EAAD,CAAkBC,WAAW,8BAA8BT,MAAOmB,IAAKT,YAAaE,EAAY,eAChGb,IAAKc,EAA0BR,MAAOS,EAAM,eAAgB5B,GAAG,QC3CnDkC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.30b18a87.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/underneath.498f6c92.jpg\";","module.exports = __webpack_public_path__ + \"static/media/folkesange.6c5b34f7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/splid.75f15c38.jpg\";","module.exports = __webpack_public_path__ + \"static/media/dead_men.60554689.png\";","module.exports = __webpack_public_path__ + \"static/media/log.18d0b0ca.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport logo from './logo.svg';\nimport underneath from './underneath.jpg';\nimport folkesange from './folkesange.jpg';\nimport splid from './splid.jpg'\nimport dead_men from './dead_men.png'\nimport log from './log.jpg'\nimport './App.css';\n\n\nfunction App() {\n  const DESCRIPTION = {\n    \"Code Orange\": \"Code Orange take metal to another dimension on this album. Their mix of \" +\n                   \"metal and hardcore punk riffs with the dark eletronic effects and sudden \" +\n                   \"killswitches of Reba Myers' guitar is a perfect reflection of the uncertain \" +\n                   \"times we are currently living in as a society.\",\n    \"Myrkur\": \"Folkesange is an absolutely flawless album. It's a nice twist from the ambient \" +\n              \"black metal music she usually releases. Her soulful voice could calm a storm.\",\n    \"Kvelertak\": \"Splid is Kvelertak's first album without their charismatic frontman, Erlend Hjelvik. \" +\n                 \"However, fans can be reassured with this album, as their vocals are in the safe hands of \" +\n                 \"Ivar Nikolaisen. This is also the first album which features songs in English, rather than \" +\n                 \"being exclusively Norwegian.\",\n    \"Trivium\": \"What The Dead Men Say is by far Trivium's best albums since Shogun. Brutal from the start to the \" +\n               \"finish.\",\n    \"Lamb of God\": \"This new release by Lamb of God is the first release without drummer Steve Adler. It is a solid \" +\n                   \"return, with your standard Lamb of God heaviness.\"\n  }\n\n  const ALBUM_URL = {\n    \"Code Orange\": \"https://open.spotify.com/embed/album/70kThssMOMBi4GyBPCk0Gu\",\n    \"Myrkur\": \"https://open.spotify.com/embed/album/1aRhu0xtlPbAb1X8us0uOD\",\n    \"Kvelertak\": \"https://open.spotify.com/embed/album/2pWZs59DuDL7ZTpRjjRq65\",\n    \"Trivium\": \"https://open.spotify.com/embed/album/0aXIJYbWk4u41iJmoJmp8y\",\n    \"Lamb of God\": \"https://open.spotify.com/embed/album/34Y9ZcZ4b3WGbhx66zS0QV\"\n  }\n\n  const SONGS = {\"Myrkur\": [\"Harpens Kraft\", \"House Carpenter\"],\n                \"Code Orange\": [\"Swallowing the Rabbit Whole\", \"In Fear\", \"Underneath\"],\n                \"Kvelertak\": [\"Rogaland\", \"Crack of Doom\", \"Br√•tebrann\"], \n                \"Trivium\": [\"What the Dead Men Say\", \"Catastrophist\"],\n                \"Lamb of God\": [\"Memento Mori\"]}\n\n  return (\n    <div>\n      <Navbar />\n      <Header />\n      <AlbumDescription albumTitle=\"1. Myrkur: Folkesange\"  album={folkesange} description={DESCRIPTION[\"Myrkur\"]}\n        src={ALBUM_URL[\"Myrkur\"]} songs={SONGS[\"Myrkur\"]} id=\"1\" />\n      <AlbumDescription albumTitle=\"2. Code Orange: Underneath\" album={underneath} description={DESCRIPTION[\"Code Orange\"]}\n        src={ALBUM_URL[\"Code Orange\"]} songs={SONGS[\"Code Orange\"]} id=\"2\" />\n      <AlbumDescription albumTitle=\"3. Kvelertak: Splid\" album={splid} description={DESCRIPTION[\"Kvelertak\"]}\n        src={ALBUM_URL[\"Kvelertak\"]} songs={SONGS[\"Kvelertak\"]} id=\"3\" />\n        <AlbumDescription albumTitle=\"4. Trivium: What The Dead Men Say\" album={dead_men} description={DESCRIPTION[\"Trivium\"]}\n        src={ALBUM_URL[\"Trivium\"]} songs={SONGS[\"Trivium\"]} id=\"4\" />\n        <AlbumDescription albumTitle=\"5. Lamb of God: Lamb of God\" album={log} description={DESCRIPTION[\"Lamb of God\"]}\n        src={ALBUM_URL[\"Lamb of God\"]} songs={SONGS[\"Lamb of God\"]} id=\"5\" />\n    </div>\n  );\n}\n\nfunction Header() {\n  const HEADER_STYLE = {\n    width: '50%',\n    height: 75,\n    borderRadius: 5,\n    marginLeft: \"25%\",\n    marginRight: \"25%\",\n    marginBottom: 50\n  }\n\n  return (\n    <div id=\"header-box\" style={HEADER_STYLE}>\n      <h1 id=\"header\">My Top 5 Albums Of 2020</h1>\n    </div>\n  );\n}\n\nfunction Navbar(props){\n  return (\n    <div class=\"sidenav\">\n      <a href=\"#header-box\">Home</a>\n      <a href=\"#1\">#1</a>\n      <a href=\"#2\">#2</a>\n      <a href=\"#3\">#3</a>\n      <a href=\"#4\">#4</a>\n      <a href=\"#5\">#5</a>\n    </div>\n  )\n}\n\n\nfunction AlbumCover(props) {\n  return (\n    <img src={props.album} alt=\"album cover\" />\n  )\n}\n\nfunction AlbumEmbed(props) {\n  return (\n    <iframe src={props.src}></iframe>\n  )\n}\n\nfunction SongsToListenTo(props){\n  const songs = props.songs\n  const LIST_ITEMS = songs.map((song) => <li class='songs'>{song}</li>)\n  return (\n    <ul>\n      {LIST_ITEMS}\n    </ul>\n  )\n}\n\nfunction AlbumDescription(props) {\n  \n  return (\n    <div class=\"album-description\" id={props.id} >\n      <AlbumCover album={props.album} />\n      <h2>{props.albumTitle}</h2>\n      <p class=\"description\">{props.description}</p>\n      <p class=\"description\">Songs to listen to:</p>\n      <SongsToListenTo songs={props.songs} />\n      <p id=\"preview\">Listen to the album in full below:</p>\n      <AlbumEmbed src={props.src} />\n    </div>\n  )\n}\n\n\n\n\n\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}